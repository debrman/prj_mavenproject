
package org.russianpost.operationhistory;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import org.russianpost.custom_duty_info.data.CustomDutyEventsForMailInput;
import org.russianpost.custom_duty_info.data.CustomDutyEventsForMailOutput;
import org.russianpost.operationhistory.data.AuthorizationHeader;
import org.russianpost.operationhistory.data.LanguageData;
import org.russianpost.operationhistory.data.OperationHistoryData;
import org.russianpost.operationhistory.data.OperationHistoryRequest;
import org.russianpost.rtm.dataexchangeespp.data.PostalOrderEventsForMaiOutput;
import org.russianpost.rtm.dataexchangeespp.data.PostalOrderEventsForMailInput;
import org.russianpost.sms_info.data.SmsHistoryData;
import org.russianpost.sms_info.data.SmsHistoryRequest;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "OperationHistory12", targetNamespace = "http://russianpost.org/operationhistory")
@XmlSeeAlso({
    org.russianpost.sms_info.data.ObjectFactory.class,
    org.russianpost.operationhistory.data.ObjectFactory.class,
    org.russianpost.custom_duty_info.data.ObjectFactory.class,
    org.russianpost.operationhistory.ObjectFactory.class,
    org.russianpost.rtm.dataexchangeespp.data.ObjectFactory.class
})
public interface OperationHistory12 {


    /**
     * 
     * @param authorizationHeader
     * @param operationHistoryRequest
     * @return
     *     returns org.russianpost.operationhistory.data.OperationHistoryData
     * @throws AuthorizationFault
     * @throws OperationHistoryFault
     */
    @WebMethod
    @WebResult(name = "OperationHistoryData", targetNamespace = "http://russianpost.org/operationhistory/data")
    @RequestWrapper(localName = "getOperationHistory", targetNamespace = "http://russianpost.org/operationhistory", className = "org.russianpost.operationhistory.GetOperationHistory")
    @ResponseWrapper(localName = "getOperationHistoryResponse", targetNamespace = "http://russianpost.org/operationhistory", className = "org.russianpost.operationhistory.GetOperationHistoryResponse")
    @Action(input = "http://russianpost.org/operationhistory/OperationHistory12/getOperationHistoryRequest", output = "http://russianpost.org/operationhistory/OperationHistory12/getOperationHistoryResponse", fault = {
        @FaultAction(className = OperationHistoryFault.class, value = "http://russianpost.org/operationhistory/OperationHistory12/getOperationHistory/Fault/OperationHistoryFault"),
        @FaultAction(className = AuthorizationFault.class, value = "http://russianpost.org/operationhistory/OperationHistory12/getOperationHistory/Fault/AuthorizationFault")
    })
    public OperationHistoryData getOperationHistory(
        @WebParam(name = "OperationHistoryRequest", targetNamespace = "http://russianpost.org/operationhistory/data")
        OperationHistoryRequest operationHistoryRequest,
        @WebParam(name = "AuthorizationHeader", targetNamespace = "http://russianpost.org/operationhistory/data")
        AuthorizationHeader authorizationHeader)
        throws AuthorizationFault, OperationHistoryFault
    ;

    /**
     * 
     * @param authorizationHeader
     * @return
     *     returns org.russianpost.operationhistory.data.LanguageData
     * @throws AuthorizationFault
     * @throws OperationHistoryFault
     * @throws LanguageFault
     */
    @WebMethod
    @WebResult(name = "LanguageData", targetNamespace = "http://russianpost.org/operationhistory/data")
    @RequestWrapper(localName = "getLanguages", targetNamespace = "http://russianpost.org/operationhistory", className = "org.russianpost.operationhistory.GetLanguages")
    @ResponseWrapper(localName = "getLanguagesResponse", targetNamespace = "http://russianpost.org/operationhistory", className = "org.russianpost.operationhistory.GetLanguagesResponse")
    @Action(input = "http://russianpost.org/operationhistory/OperationHistory12/getLanguagesRequest", output = "http://russianpost.org/operationhistory/OperationHistory12/getLanguagesResponse", fault = {
        @FaultAction(className = OperationHistoryFault.class, value = "http://russianpost.org/operationhistory/OperationHistory12/getLanguages/Fault/OperationHistoryFault"),
        @FaultAction(className = AuthorizationFault.class, value = "http://russianpost.org/operationhistory/OperationHistory12/getLanguages/Fault/AuthorizationFault"),
        @FaultAction(className = LanguageFault.class, value = "http://russianpost.org/operationhistory/OperationHistory12/getLanguages/Fault/LanguageFault")
    })
    public LanguageData getLanguages(
        @WebParam(name = "AuthorizationHeader", targetNamespace = "http://russianpost.org/operationhistory/data")
        AuthorizationHeader authorizationHeader)
        throws AuthorizationFault, LanguageFault, OperationHistoryFault
    ;

    /**
     * 
     * @param authorizationHeader
     * @param customDutyEventsForMailInput
     * @return
     *     returns org.russianpost.custom_duty_info.data.CustomDutyEventsForMailOutput
     * @throws AuthorizationFault
     * @throws LanguageFault
     * @throws CustomDutyEventsForMailFault
     */
    @WebMethod
    @WebResult(name = "CustomDutyEventsForMailOutput", targetNamespace = "http://www.russianpost.org/custom-duty-info/data")
    @RequestWrapper(localName = "getCustomDutyEventsForMail", targetNamespace = "http://russianpost.org/operationhistory", className = "org.russianpost.operationhistory.GetCustomDutyEventsForMail")
    @ResponseWrapper(localName = "getCustomDutyEventsForMailResponse", targetNamespace = "http://russianpost.org/operationhistory", className = "org.russianpost.operationhistory.GetCustomDutyEventsForMailResponse")
    @Action(input = "http://russianpost.org/operationhistory/OperationHistory12/getCustomDutyEventsForMailRequest", output = "http://russianpost.org/operationhistory/OperationHistory12/getCustomDutyEventsForMailResponse", fault = {
        @FaultAction(className = CustomDutyEventsForMailFault.class, value = "http://russianpost.org/operationhistory/OperationHistory12/getCustomDutyEventsForMail/Fault/CustomDutyEventsForMailFault"),
        @FaultAction(className = AuthorizationFault.class, value = "http://russianpost.org/operationhistory/OperationHistory12/getCustomDutyEventsForMail/Fault/AuthorizationFault"),
        @FaultAction(className = LanguageFault.class, value = "http://russianpost.org/operationhistory/OperationHistory12/getCustomDutyEventsForMail/Fault/LanguageFault")
    })
    public CustomDutyEventsForMailOutput getCustomDutyEventsForMail(
        @WebParam(name = "AuthorizationHeader", targetNamespace = "http://russianpost.org/operationhistory/data")
        AuthorizationHeader authorizationHeader,
        @WebParam(name = "CustomDutyEventsForMailInput", targetNamespace = "http://www.russianpost.org/custom-duty-info/data")
        CustomDutyEventsForMailInput customDutyEventsForMailInput)
        throws AuthorizationFault, CustomDutyEventsForMailFault, LanguageFault
    ;

    /**
     * 
     * @param smsHistoryRequest
     * @param authorizationHeader
     * @return
     *     returns org.russianpost.sms_info.data.SmsHistoryData
     * @throws AuthorizationFault
     * @throws LanguageFault
     * @throws SmsHistoryFault
     */
    @WebMethod
    @WebResult(name = "SmsHistoryData", targetNamespace = "http://russianpost.org/sms-info/data")
    @RequestWrapper(localName = "getSmsHistory", targetNamespace = "http://russianpost.org/operationhistory", className = "org.russianpost.operationhistory.GetSmsHistory")
    @ResponseWrapper(localName = "getSmsHistoryResponse", targetNamespace = "http://russianpost.org/operationhistory", className = "org.russianpost.operationhistory.GetSmsHistoryResponse")
    @Action(input = "http://russianpost.org/operationhistory/OperationHistory12/getSmsHistoryRequest", output = "http://russianpost.org/operationhistory/OperationHistory12/getSmsHistoryResponse", fault = {
        @FaultAction(className = SmsHistoryFault.class, value = "http://russianpost.org/operationhistory/OperationHistory12/getSmsHistory/Fault/SmsHistoryFault"),
        @FaultAction(className = AuthorizationFault.class, value = "http://russianpost.org/operationhistory/OperationHistory12/getSmsHistory/Fault/AuthorizationFault"),
        @FaultAction(className = LanguageFault.class, value = "http://russianpost.org/operationhistory/OperationHistory12/getSmsHistory/Fault/LanguageFault")
    })
    public SmsHistoryData getSmsHistory(
        @WebParam(name = "AuthorizationHeader", targetNamespace = "http://russianpost.org/operationhistory/data")
        AuthorizationHeader authorizationHeader,
        @WebParam(name = "SmsHistoryRequest", targetNamespace = "http://russianpost.org/sms-info/data")
        SmsHistoryRequest smsHistoryRequest)
        throws AuthorizationFault, LanguageFault, SmsHistoryFault
    ;

    /**
     * 
     * @param postalOrderEventsForMailInput
     * @param authorizationHeader
     * @return
     *     returns org.russianpost.rtm.dataexchangeespp.data.PostalOrderEventsForMaiOutput
     * @throws PostalOrderEventsForMailFault
     */
    @WebMethod(operationName = "PostalOrderEventsForMail")
    @WebResult(name = "PostalOrderEventsForMaiOutput", targetNamespace = "http://www.russianpost.org/RTM/DataExchangeESPP/Data")
    @RequestWrapper(localName = "PostalOrderEventsForMail", targetNamespace = "http://russianpost.org/operationhistory", className = "org.russianpost.operationhistory.PostalOrderEventsForMail")
    @ResponseWrapper(localName = "PostalOrderEventsForMailResponse", targetNamespace = "http://russianpost.org/operationhistory", className = "org.russianpost.operationhistory.PostalOrderEventsForMailResponse")
    @Action(input = "http://russianpost.org/operationhistory/OperationHistory12/PostalOrderEventsForMailRequest", output = "http://russianpost.org/operationhistory/OperationHistory12/PostalOrderEventsForMailResponse", fault = {
        @FaultAction(className = PostalOrderEventsForMailFault.class, value = "http://russianpost.org/operationhistory/OperationHistory12/PostalOrderEventsForMail/Fault/PostalOrderEventsForMailFault")
    })
    public PostalOrderEventsForMaiOutput postalOrderEventsForMail(
        @WebParam(name = "AuthorizationHeader", targetNamespace = "http://russianpost.org/operationhistory/data")
        AuthorizationHeader authorizationHeader,
        @WebParam(name = "PostalOrderEventsForMailInput", targetNamespace = "http://www.russianpost.org/RTM/DataExchangeESPP/Data")
        PostalOrderEventsForMailInput postalOrderEventsForMailInput)
        throws PostalOrderEventsForMailFault
    ;

}
